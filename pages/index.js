import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import {
  VStack,
  Box,
  Text,
  Stack,
  Table,
  Tbody,
  Tr,
  Td,
  Button,
  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalFooter,
  ModalBody,
  ModalCloseButton,
  useDisclosure,
  Center,
  FormControl,
  FormLabel,
  Input,
  FormErrorMessage,
} from "@chakra-ui/react";
import React, { useState } from "react";
import { useForm } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup";
import { validationUser } from "@/utils/schema";
import { useLogin, useValidate } from "@/store";

export default function Home() {
  const {
    register,
    handleSubmit,
    formState: { errors },
    reset,
  } = useForm({
    resolver: yupResolver(validationUser),
  });

  const { username } = useLogin((state) => state);
  const { setValidateData } = useValidate((state) => state);

  const { isOpen, onOpen, onClose } = useDisclosure();
  const [dataUser, setDataUser] = useState();

  const initialRef = React.useRef(null);
  const finalRef = React.useRef(null);

  const handleOnSubmit = (data) => {
    console.log("ini merupakan data user", data);
    setDataUser(data);
    setValidateData(true);
    reset();
    onClose();
    // router.push("/");
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Stack px={[10, null, 20]} py={[6, null, 10]} spacing="14">
        <Table variant="transparent">
          <Tbody>
            <Tr>
              <Td
                width="24"
                fontSize="md"
                fontWeight="bold"
                color="blue-primary"
                px="0"
              >
                Name
              </Td>
              <Td
                width="2"
                fontSize="md"
                fontWeight="bold"
                color="blue-primary"
                px="0"
              >
                :
              </Td>
              <Td fontSize="md" fontWeight="bold" color="blue-primary">
                {dataUser?.name ? dataUser?.name : username}
              </Td>
            </Tr>
            <Tr>
              <Td
                width="24"
                fontSize="md"
                fontWeight="bold"
                color="blue-primary"
                px="0"
              >
                Email
              </Td>
              <Td
                width="2"
                fontSize="md"
                fontWeight="bold"
                color="blue-primary"
                px="0"
              >
                :
              </Td>
              <Td fontSize="md" fontWeight="bold" color="blue-primary">
                {dataUser?.email}
              </Td>
            </Tr>
            <Tr>
              <Td
                width="24"
                fontSize="md"
                fontWeight="bold"
                color="blue-primary"
                px="0"
              >
                Phone Number
              </Td>
              <Td
                width="2"
                fontSize="md"
                fontWeight="bold"
                color="blue-primary"
                px="0"
              >
                :
              </Td>
              <Td fontSize="md" fontWeight="bold" color="blue-primary">
                {dataUser?.phoneNumber}
              </Td>
            </Tr>
            <Tr>
              <Td
                width="24"
                fontSize="md"
                fontWeight="bold"
                color="blue-primary"
                px="0"
              >
                Address
              </Td>
              <Td
                width="2"
                fontSize="md"
                fontWeight="bold"
                color="blue-primary"
                px="0"
              >
                :
              </Td>
              <Td fontSize="md" fontWeight="bold" color="blue-primary">
                {dataUser?.address}
              </Td>
            </Tr>
          </Tbody>
        </Table>
        <VStack>
          <Button variant="bluePrimary" onClick={onOpen}>
            Complete Your Personal Data
          </Button>
          <Modal
            initialFocusRef={initialRef}
            finalFocusRef={finalRef}
            isOpen={isOpen}
            onClose={onClose}
          >
            <ModalOverlay />
            <ModalContent>
              <ModalHeader>Complete Your Personal Data</ModalHeader>
              <ModalCloseButton />
              <form onSubmit={handleSubmit(handleOnSubmit)}>
                <ModalBody pb={6}>
                  <FormControl isInvalid={errors.name}>
                    <FormLabel>Name</FormLabel>
                    <Input
                      ref={initialRef}
                      placeholder="Name"
                      defaultValue={username}
                      {...register("name")}
                    />
                    <FormErrorMessage>{errors.name?.message}</FormErrorMessage>
                  </FormControl>

                  <FormControl mt={4} isInvalid={errors.email}>
                    <FormLabel>Email</FormLabel>
                    <Input placeholder="Email" {...register("email")} />
                    <FormErrorMessage>{errors.email?.message}</FormErrorMessage>
                  </FormControl>
                  <FormControl mt={4} isInvalid={errors.phoneNumber}>
                    <FormLabel>No Telp</FormLabel>
                    <Input placeholder="No Telp" {...register("phoneNumber")} />
                    <FormErrorMessage>
                      {errors.phoneNumber?.message}
                    </FormErrorMessage>
                  </FormControl>
                  <FormControl mt={4} isInvalid={errors.address}>
                    <FormLabel>Address</FormLabel>
                    <Input placeholder="Address" {...register("address")} />
                    <FormErrorMessage>
                      {errors.address?.message}
                    </FormErrorMessage>
                  </FormControl>
                </ModalBody>

                <ModalFooter>
                  <Button colorScheme="blue" mr={3} type="submit">
                    Save
                  </Button>
                  <Button onClick={onClose}>Cancel</Button>
                </ModalFooter>
              </form>
            </ModalContent>
          </Modal>
        </VStack>
      </Stack>
    </>
  );
}
